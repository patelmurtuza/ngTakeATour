{"version":3,"sources":["ng://ngx-take-atour/lib/ngx-take-atour.service.ts","ng://ngx-take-atour/lib/ngx-take-atour.component.ts","ng://ngx-take-atour/lib/ngx-take-atour.module.ts"],"names":["NgxTakeATourService","Injectable","args","providedIn","NgxTakeATourComponent","el","renderer","globalsettings","this","element","nativeElement","prototype","ngOnInit","mainPopOver","querySelector","document","body","appendChild","setStyle","positioning","align","value","ngDoCheck","toggleHelp","display","openPopover","e","_this","styles","getComputedStyle","currentPopOver","target","getAttribute","getStyleMW","parseInt","maxWidth","clientX","clientY","addClass","left","countPopOverArr","length","find","i","id","undefined","push","enableCloseAll","closePopOver","removeAttribute","removeClass","index","indexOf","splice","closeBtnMain","remove","state","closeBtn","closeIcon","closeTextWrap","closeText","querySelectorAll","createElement","createText","enableCloseBtn","setTimeout","popOver","addEventListener","event","hasAttribute","classList","toggleState","setAttribute","videoplayer","helpContent","videoUrl","play","ngOnDestroy","removeChild","Component","selector","template","ElementRef","Renderer2","Input","ViewChild","HostBinding","NgxTakeATourModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTakeATourService {\n\n  public closeBtnMain;\n  public countPopOverArr: any = [];\n  constructor() { }\n}\n","import { Component, OnInit, Input, ElementRef, ViewChild, HostBinding, Renderer2 } from '@angular/core';\nimport { NgxTakeATourService } from './ngx-take-atour.service';\n\n@Component({\n  selector: 'NgxTT-NgxTakeATour',\n  template: `\n  <small class=\"k-icon k-i-information\" attr.data-id=\"{{id}}\" (click)=\"openPopover($event)\"></small>\n  <div class=\"popover\" role=\"tooltip\" attr.id=\"{{id}}\">\n      <h3 class=\"popover-title\">\n          <strong>{{helpContent.title}}</strong>\n          <i class=\"glyphicon glyphicon-remove pull-right\" (click)=\"closePopOver($event)\"></i>\n      </h3>\n      <div class=\"popover-content\">\n          <div class=\"\" [@slideToggle]=\"state\">\n              <video controls autoplay #videoPlayer>\n                  <source src=\"\" type=\"video/mp4\"/>\n              </video>\n          </div>\n          <ul>\n              <li *ngFor=\"let itemContent of helpContent.content\">{{itemContent}}</li>\n          </ul>\n      </div>\n      <div class=\"text-center\">\n          <button class=\"btn btn-primary btn-link\" (click)=\"toggleState()\">\n              <i [ngClass]=\"state =='active'?'glyphicon glyphicon-menu-up':'glyphicon glyphicon-facetime-video'\"></i>\n          </button>\n      </div>\n  </div>\n  `,\n  styles: ['ngx-take-atour.component.css']\n})\nexport class NgxTakeATourComponent implements OnInit {\n  public element: any;\n  public mainPopOver: any;\n  public currentPopOver: any;\n  public state = 'inactive';\n\n  @Input() id: string;\n  @Input() toggleHelp: boolean;\n  @Input() positioning: any = {};\n  @Input() helpContent: any = {};\n\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  @HostBinding('style.display') display: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private globalsettings: NgxTakeATourService) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mainPopOver = this.element.querySelector(\".popover\");\n    document.body.appendChild(this.mainPopOver);\n    this.renderer.setStyle(this.element, this.positioning.align, this.positioning.value + \"px\");\n  }\n\n  ngDoCheck() {\n    if (this.toggleHelp)\n      this.display = \"block\";\n    else\n      this.display = \"none\";\n  }\n\n  openPopover(e) {\n    let styles: any = getComputedStyle(this.mainPopOver);\n    this.currentPopOver = e.target.getAttribute(\"data-id\");\n    this.renderer.setStyle(this.mainPopOver, \"display\", \"block\");\n    this.renderer.setStyle(this.mainPopOver, \"max-width\", \"500px\");\n    let getStyleMW = parseInt(styles.maxWidth, 10);\n    this.renderer.setStyle(this.mainPopOver, \"left\", (e.clientX + 15) - (getStyleMW / 2) + \"px\");\n    this.renderer.setStyle(this.mainPopOver, \"top\", e.clientY + \"px\");\n    this.renderer.addClass(this.mainPopOver, \"tempPopover\");\n    let getStyleLeftValue = parseInt(styles.left, 10);\n\n    if (getStyleLeftValue <= 0) {\n      this.renderer.setStyle(this.mainPopOver, \"left\", (e.clientX) + \"px\");\n    }\n    if (this.globalsettings.countPopOverArr.length > 0) {\n      if (this.globalsettings.countPopOverArr.find(i => i == this.mainPopOver.id) == undefined) this.globalsettings.countPopOverArr.push(this.mainPopOver.id);\n    }\n    else\n      this.globalsettings.countPopOverArr.push(this.mainPopOver.id);\n    this.enableCloseAll();\n  }\n\n  closePopOver(e?: any) {\n\n    this.renderer.removeAttribute(this.mainPopOver, \"style\");\n    this.renderer.removeClass(this.mainPopOver, \"tempPopover\");\n    let index = this.globalsettings.countPopOverArr.indexOf(this.mainPopOver.id);\n    if (index > -1) this.globalsettings.countPopOverArr.splice(index, 1);\n    if (this.globalsettings.countPopOverArr.length == 0) {\n      if (this.globalsettings.closeBtnMain) {\n        this.globalsettings.closeBtnMain.remove();\n        this.globalsettings.closeBtnMain = null;\n      }\n    }\n    this.state = 'inactive';\n  }\n\n  enableCloseAll() {\n    let totalPopover = document.querySelectorAll(\".tempPopover\");\n    let closeBtn, closeIcon, closeTextWrap, closeText;\n\n    if (this.globalsettings.countPopOverArr.length > 2) {\n      if (!this.globalsettings.closeBtnMain) {\n        closeBtn = this.renderer.createElement(\"div\");\n        closeIcon = this.renderer.createElement(\"i\");\n        closeTextWrap = this.renderer.createElement(\"span\");\n        closeText = this.renderer.createText(\"Close all walkthrough window\");\n        this.renderer.addClass(closeBtn, \"close-popover\");\n        this.renderer.addClass(closeIcon, \"glyphicon\");\n        this.renderer.addClass(closeIcon, \"glyphicon-remove\");\n        this.renderer.appendChild(document.body, closeBtn);\n        this.renderer.appendChild(closeBtn, closeTextWrap);\n        this.renderer.appendChild(closeBtn, closeIcon);\n        this.renderer.appendChild(closeTextWrap, closeText);\n        this.globalsettings.closeBtnMain = document.querySelector(\".close-popover\");\n        this.enableCloseBtn();\n        setTimeout(() => {\n          this.renderer.addClass(closeBtn, \"visible\");\n        }, 100);\n      }\n    }\n  }\n\n  enableCloseBtn() {\n    let popOver = document.querySelectorAll(\".popover\");\n\n    this.globalsettings.closeBtnMain.addEventListener(\"click\", (event: Event) => {\n      for (let i = 0; i < popOver.length; i++) {\n        if (popOver[i].hasAttribute(\"style\")) {\n          popOver[i].removeAttribute(\"style\");\n          popOver[i].classList.remove(\"tempPopover\");\n        }\n      }\n      this.globalsettings.closeBtnMain.remove();\n      this.globalsettings.closeBtnMain = null;\n      this.globalsettings.countPopOverArr = [];\n      this.state = 'inactive';\n    });\n  }\n\n  toggleState() {\n    this.state = this.state === 'active' ? 'inactive' : 'active';\n    this.renderer.setAttribute(this.videoplayer.nativeElement, \"src\", this.helpContent.videoUrl);\n    if (this.state === 'active')\n      this.videoplayer.nativeElement.play();\n  }\n\n  ngOnDestroy() {\n    this.closePopOver();\n    this.globalsettings.countPopOverArr = [];\n    this.globalsettings.closeBtnMain = null;\n    this.state = 'inactive';\n    document.body.removeChild(this.mainPopOver);\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from \"@angular/core\";\nimport { NgxTakeATourComponent } from './ngx-take-atour.component';\n\n@NgModule({\n  imports: [\n    CommonModule \n  ],\n  declarations: [NgxTakeATourComponent],\n  exports: [NgxTakeATourComponent]\n})\nexport class NgxTakeATourModule { }\n"]}